---
- name: begin ha.yml
  debug:
    msg: Running ha.yml playbook

- name: add floating IPs to instances on controllers
  os_floating_ip:
    auth: "{{ auth }}"
    network: external
    server: "validate-{{ item }}"
    reuse: true
  register: fip_controllers
  with_items: groups['controller']
  when: converged

- name: floating ips are reachable
  command: "ping -c 5 {{ item.floating_ip.floating_ip_address }}"
  with_items: fip_controllers.results
  register: pings
  until: pings|success
  delay: 1
  retries: 5
  become: no
  delegate_to: localhost
  when: converged

- name: add floating IP to a non-controller instance
  os_floating_ip:
    auth: "{{ auth }}"
    network: external
    server: "validate-{{ item }}"
    reuse: true
  register: fip_compute
  ignore_errors: yes
  with_items:
    - "{{ (groups['compute'][1:]|difference(groups['controller']))[0] }}"
  when: not converged

- name: floating ips are reachable
  command: "ping -c 5 {{ item.floating_ip.floating_ip_address }}"
  with_items: fip_compute.results
  register: pings
  until: pings|success
  delay: 10
  retries: 5
  become: no
  delegate_to: localhost
  when: not converged

# initiate hard reboot on controller 0
- name: reboot controller 0
  shell: shutdown -r now

- name: wait for the panic controller 0
  wait_for:
    host: "{{ inventory_hostname }}"
    port: 22
    state: stopped
    delay: 10
    timeout: 30
  delegate_to: "{{ groups['controller'][1] }}"

# Check API
- include: api.yml
  vars:
    ip_addr: "{{ fip_controllers.results[0].floating_ip.floating_ip_address }}"
  when: converged

- include: api.yml
  vars:
    ip_addr: "{{ fip_compute.results[0].floating_ip.floating_ip_address }}"
  when: not converged

- include: converged.yml
  when: converged

- include: dedicated.yml
  when: not converged
